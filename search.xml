<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[不同设备使用hexo写作的方法]]></title>
    <url>%2F2017%2F12%2F30%2Flinux-writing%2F</url>
    <content type="text"><![CDATA[同步的原理因为hexo本身上传到github上的文件是编译后的文件，所以我们要利用git的同步功能，将hexo文件夹中的文件同步到github上，然后实现在不同设备上使用hexo写作。 前期准备 一个github账号 git环境 这两个设置都十分简单，故此处不再赘述。 github设置建立新分支因为我们要先把hexo文件夹中的文件同步到hexo上，而yourname.github.io只有一个分支master，所以我们要新建一个分支（分支名可以随便取） 然后进入设置，把新建立的分支设置成默认分支 导入新设备中的SSH密钥首先算出新的密钥，使用ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;,一路回车，此过程中提示输入密码，可以选择不输入 Windows下没有自带SSH，需要手动安装 Windows下安装SSH 生成之后，找到id_rsa.pub,打开此文件，复制文件中所有内容后去github的设置页添加，找到Settings -&gt; 左栏点击 SSH and GPG Keys -&gt; 点击New SSH key 公钥内容粘贴进“Key”文本域内。 title栏中填一个容易辨别的标题，点击 Add key。添加完毕之后可以测试一下能否正常连接。12alex@alex-VirtualBox:~$ ssh -T git@github.comHi Anthorty! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 出现此提示说明连接正常。 上传hexo文件夹中的文件打开命令行，切换到hexo文件夹，使用如下git命令详细方法见 Git远程操作详解1234git remote add backup git@github.com:yourname/yourname.github.io.gitgit add .git commit -m &quot;description&quot;git push backup master:hexo 等待完成后，在github上的hexo分支下就会出现hexo文件夹中的内容（不包括.gitignore、.npmignore中忽略的内容） 新设备中设置首先搭建好hexo环境 搭建Hexo环境进入准备用作Hexo的文件夹，输入 1234hexo init yourblognamecd yourblognamegit remote add &lt;远程主机名（可以自己取）&gt; git@github.com:yourname/yourname.github.io.gitgit pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; 写完之后就可以使用hexo g -d将文件部署到github上。 收尾工作在不同环境写完之后，记得使用 123git add .git commit -m &quot;description&quot;git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt; 以此保持文件一致。]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>git设置</tag>
      </tags>
  </entry>
</search>
